package basic.ch14;

public class ArrayTest1 {

	public static void main(String[] args) {

		// * 배열이란?
		// 연관된 데이터를 모아서 통으로 관리하기 위한 데이터 타입!
		
		// * 배열의 특징 (중요★★★★★★★★★★★★)
		// 배열은 사용하기 전에 반드시 몇 개의 데이터가 들어갈 지
		// 크기를 지정해야 사용할 수 있다.
		
		// * 배열 메모리 공간 만들기
		int[] numbers = new int[3]; // 값 초기화 (x) , 공간만 선언한 상태.
		int intBoxes[] = new int[5];
		
		// * 값 넣기 (초기화하기)
		// 배열의 길이 -> 3
		// 인덱스의 길이 -> 2
		numbers[0] = 1000;
		numbers[1] = 1001;
		numbers[2] = 1002;
		
		// numbers[3] = 1003; // 세 칸만 만들었는데 ( 0 1 2 ) 3 
						      // 하나 더 만들었기 때문에 오류 발생! (인덱스 길이 벗어남)
		// * 사전 기반 지식 - 모든 프로그래밍의 인덱스 번호 시작은 0부터 시작.
		
		// * 배열의 선언과 동시에 초기화 하기
		int[] grades = new int[] {5, 3, 1}; // 배열의 크기 = 3개 (인덱스: 2개)
		int[] grades2 = {5, 3, 1}; // new int[] 도 생략이 가능하다.
		
		// * 문제 1
		// 5개의 크기를 가지는 double 타입의 배열을 선언하시오.
		// 배열의 이름은 마음대로 작성
		double[] peachs = new double[5]; // [] [] [] [] []
		// double 타입을 저장한다는 뜻	 //  0 1  2  3  4
		// (배열이 double xx)
		
		// * 문제 2
		// 위에서 선언한 배열의 값을 인덱스 0 ~ 2 까지 초기화 하시오.
		// 값은 아무거나 상관 x
		peachs[0] = 10.0;
		peachs[1] = 0.5;
		peachs[2] = 1.3;
		
		// peachs[4] = 0.0
		// peachs[5] = 0.0  --> 아무 값을 넣지 않으면 , 0.0 으로 초기화 되어있음.
		
		
		// * 문제 3
		// String 타입의 배열을 선언, 배열의 크기는 3개,
		// 선언과 동시에 초기화 하시오.
		String[] fruits = new String[]{"사과", "망고", "키위"};
		
	} // end of main

} // end of class
